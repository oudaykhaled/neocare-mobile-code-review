{"ast":null,"code":"export const stylingContent = `\n# üî¥ CRITICAL ISSUE #5: Chaotic Styling Approach\n\n**Severity:** üî¥ CRITICAL  \n**Score:** 3/10  \n**Status:** ‚ùå MUST FIX IMMEDIATELY\n\n---\n\n## Overview\n\nThe codebase has **NO consistent styling approach**. It mixes multiple styling patterns chaotically:\n- Inline styles\n- StyleSheet.create()\n- Theme colors (sometimes)\n- Hardcoded colors\n- Component props for styling\n- Mixed approaches in same file\n\nThis makes the code:\n- ‚ùå Unmaintainable\n- ‚ùå Inconsistent\n- ‚ùå Poor performance (inline styles)\n- ‚ùå Difficult to theme\n- ‚ùå Hard to refactor\n\n---\n\n## Issues Found\n\n### 1. **Inline Styles Everywhere**\n\n#### Location: \\`app/(auth)/medication/addMedicine.tsx\\`\n\n\\`\\`\\`typescript\n<View\n  style={{\n    flexDirection: direction === \"ltr\" ? \"row\" : \"row-reverse\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n  }}\n>\n\\`\\`\\`\n\n**Issues:**\n- ‚ùå Style object recreated on every render\n- ‚ùå Poor performance\n- ‚ùå Cannot reuse\n- ‚ùå Hard to maintain\n- ‚ùå No consistency\n\n---\n\n#### Location: \\`app/(auth)/booking/unknownPay.tsx\\`\n\n\\`\\`\\`typescript\n<Card\n  padding={12}\n  margin={12}\n  backgroundColor={colors.card}\n  style={styles.container}\n>\n\\`\\`\\`\n\n**Issues:**\n- ‚ùå Mix of props and style object\n- ‚ùå Inconsistent API\n- ‚ùå Magic numbers as props\n- ‚ùå Confusing component interface\n\n---\n\n### 2. **Inconsistent StyleSheet Usage**\n\n#### Location: \\`src/components/UIKit/Button.tsx\\`\n\n\\`\\`\\`typescript\nconst styles = StyleSheet.create({\n  contain: {\n    paddingVertical: 8,      // ‚ùå Magic number\n    paddingHorizontal: 14,   // ‚ùå Magic number\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    gap: 4,                  // ‚ùå Magic number\n  },\n  outline: {\n    paddingVertical: 8,      // ‚ùå Duplicated values\n    paddingHorizontal: 14,   // ‚ùå Duplicated values\n    alignItems: \"center\",    // ‚ùå Duplicated\n    justifyContent: \"center\",// ‚ùå Duplicated\n    gap: 4,                  // ‚ùå Duplicated\n  },\n  text: {\n    paddingVertical: 8,      // ‚ùå Duplicated again\n    paddingHorizontal: 14,   // ‚ùå Duplicated again\n    alignItems: \"center\",    // ‚ùå Duplicated again\n    justifyContent: \"center\",// ‚ùå Duplicated again\n    gap: 4,                  // ‚ùå Duplicated again\n  },\n});\n\\`\\`\\`\n\n**Issues:**\n- ‚ùå Massive code duplication\n- ‚ùå Magic numbers\n- ‚ùå No shared base styles\n- ‚ùå Hard to maintain consistency\n\n---\n\n### 3. **Hardcoded Colors**\n\n#### Location: Multiple files\n\n\\`\\`\\`typescript\n// Sometimes using theme colors\nbackgroundColor: colors.card\n\n// Sometimes hardcoded\nbackgroundColor: \"#7C3A3D\"\n\n// Sometimes using Colors constant\nbackgroundColor: Colors.main\n\n// Sometimes inline\nstyle={{ backgroundColor: \\'#fff\\' }}\n\\`\\`\\`\n\n**Issues:**\n- ‚ùå No consistency\n- ‚ùå Cannot theme properly\n- ‚ùå Hardcoded values\n- ‚ùå Multiple sources of truth\n\n---\n\n### 4. **Mixed Styling Patterns in Same File**\n\n#### Location: \\`app/(auth)/BookingsDetail/index.tsx\\`\n\n\\`\\`\\`typescript\n// Pattern 1: StyleSheet\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 16,\n  },\n});\n\n// Pattern 2: Inline styles\n<View style={{ marginTop: 12, paddingHorizontal: 16 }}>\n\n// Pattern 3: Component props\n<Card padding={12} margin={8}>\n\n// Pattern 4: Mixed\n<View style={[styles.container, { marginTop: 24 }]}>\n\n// Pattern 5: Conditional inline\n<View style={{\n  flexDirection: isRTL ? \\'row-reverse\\' : \\'row\\',\n  padding: 16,\n}}>\n\\`\\`\\`\n\n**Issues:**\n- ‚ùå Five different patterns in one file\n- ‚ùå No consistency\n- ‚ùå Confusing for developers\n- ‚ùå Hard to maintain\n\n---\n\n### 5. **No Base/Shared Styles**\n\nNo shared utility styles for common patterns:\n\n\\`\\`\\`typescript\n// This pattern repeated 50+ times:\n{\n  flexDirection: \\'row\\',\n  alignItems: \\'center\\',\n  justifyContent: \\'space-between\\',\n}\n\n// This pattern repeated 30+ times:\n{\n  flex: 1,\n  padding: 16,\n}\n\n// This pattern repeated 20+ times:\n{\n  marginTop: 16,\n  marginBottom: 16,\n}\n\\`\\`\\`\n\n**Issues:**\n- ‚ùå Massive code duplication\n- ‚ùå No DRY principle\n- ‚ùå Inconsistent spacing\n- ‚ùå Hard to change globally\n\n---\n\n## Impact Assessment\n\n| Category | Impact | Description |\n|----------|--------|-------------|\n| Performance | üü† High | Inline styles hurt performance |\n| Maintainability | üî¥ Critical | Impossible to maintain consistency |\n| Developer Experience | üî¥ Critical | Confusing, no clear patterns |\n| Consistency | üî¥ Critical | UI looks inconsistent |\n| Scalability | üî¥ Critical | Cannot scale with current approach |\n| Theming | üü† High | Difficult to theme properly |\n\n---\n\n## Required Implementation\n\n### 1. **Establish Styling Standards**\n\n#### Create: \\`docs/STYLING_GUIDE.md\\`\n\n\\`\\`\\`markdown\n# Styling Guide\n\n## Rules\n\n1. **ALWAYS use StyleSheet.create()** - Never inline styles except for dynamic values\n2. **Use theme colors** - Never hardcode colors\n3. **Use design tokens** - Never use magic numbers\n4. **Use shared styles** - Don\\'t duplicate common patterns\n5. **Keep styles close to component** - Define at bottom of file\n\n## Examples\n\n### ‚úÖ GOOD\n\\`\\`\\`typescript\nimport { Spacing, BorderRadius } from \\'@src/constants\\';\nimport { useTheme } from \\'react-native-paper\\';\n\nconst MyComponent = () => {\n  const { colors } = useTheme();\n  \n  return (\n    <View style={[styles.container, { backgroundColor: colors.surface }]}>\n      <Text>Content</Text>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: Spacing.lg,\n    borderRadius: BorderRadius.md,\n  },\n});\n\\`\\`\\`\n\n### ‚ùå BAD\n\\`\\`\\`typescript\n<View style={{\n  padding: 16,\n  borderRadius: 12,\n  backgroundColor: \\'#fff\\',\n}}>\n  <Text>Content</Text>\n</View>\n\\`\\`\\`\n\\`\\`\\`\n\n---\n\n### 2. **Create Shared Styles**\n\n#### Create: \\`src/styles/SharedStyles.ts\\`\n\n\\`\\`\\`typescript\nimport { StyleSheet } from \\'react-native\\';\nimport { Spacing } from \\'@src/constants\\';\n\n/**\n * Shared utility styles used throughout the app\n * Import and use these instead of duplicating styles\n */\nexport const SharedStyles = StyleSheet.create({\n  // Flex layouts\n  flex1: {\n    flex: 1,\n  },\n  \n  // Common flex patterns\n  row: {\n    flexDirection: \\'row\\',\n  },\n  \n  rowReverse: {\n    flexDirection: \\'row-reverse\\',\n  },\n  \n  column: {\n    flexDirection: \\'column\\',\n  },\n  \n  // Alignment\n  center: {\n    alignItems: \\'center\\',\n    justifyContent: \\'center\\',\n  },\n  \n  alignCenter: {\n    alignItems: \\'center\\',\n  },\n  \n  justifyCenter: {\n    justifyContent: \\'center\\',\n  },\n  \n  spaceBetween: {\n    justifyContent: \\'space-between\\',\n  },\n  \n  spaceAround: {\n    justifyContent: \\'space-around\\',\n  },\n  \n  // Common combinations\n  rowCenter: {\n    flexDirection: \\'row\\',\n    alignItems: \\'center\\',\n  },\n  \n  rowBetween: {\n    flexDirection: \\'row\\',\n    alignItems: \\'center\\',\n    justifyContent: \\'space-between\\',\n  },\n  \n  // Padding\n  paddingXS: {\n    padding: Spacing.xs,\n  },\n  \n  paddingSM: {\n    padding: Spacing.sm,\n  },\n  \n  paddingMD: {\n    padding: Spacing.md,\n  },\n  \n  paddingLG: {\n    padding: Spacing.lg,\n  },\n  \n  paddingXL: {\n    padding: Spacing.xl,\n  },\n  \n  // Horizontal padding\n  paddingHorizontalSM: {\n    paddingHorizontal: Spacing.sm,\n  },\n  \n  paddingHorizontalMD: {\n    paddingHorizontal: Spacing.md,\n  },\n  \n  paddingHorizontalLG: {\n    paddingHorizontal: Spacing.lg,\n  },\n  \n  // Vertical padding\n  paddingVerticalSM: {\n    paddingVertical: Spacing.sm,\n  },\n  \n  paddingVerticalMD: {\n    paddingVertical: Spacing.md,\n  },\n  \n  paddingVerticalLG: {\n    paddingVertical: Spacing.lg,\n  },\n  \n  // Margin\n  marginXS: {\n    margin: Spacing.xs,\n  },\n  \n  marginSM: {\n    margin: Spacing.sm,\n  },\n  \n  marginMD: {\n    margin: Spacing.md,\n  },\n  \n  marginLG: {\n    margin: Spacing.lg,\n  },\n  \n  marginXL: {\n    margin: Spacing.xl,\n  },\n  \n  // Gaps (for flexbox)\n  gapXS: {\n    gap: Spacing.xs,\n  },\n  \n  gapSM: {\n    gap: Spacing.sm,\n  },\n  \n  gapMD: {\n    gap: Spacing.md,\n  },\n  \n  gapLG: {\n    gap: Spacing.lg,\n  },\n  \n  // Full width/height\n  fullWidth: {\n    width: \\'100%\\',\n  },\n  \n  fullHeight: {\n    height: \\'100%\\',\n  },\n  \n  // Absolute positioning\n  absolute: {\n    position: \\'absolute\\',\n  },\n  \n  absoluteFill: {\n    position: \\'absolute\\',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n  },\n});\n\\`\\`\\`\n\n---\n\n### 3. **Update Components to Use Shared Styles**\n\n#### Update: \\`app/(auth)/medication/addMedicine.tsx\\`\n\n**Before:**\n\\`\\`\\`typescript\n<View\n  style={{\n    flexDirection: direction === \"ltr\" ? \"row\" : \"row-reverse\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n  }}\n>\n\\`\\`\\`\n\n**After:**\n\\`\\`\\`typescript\nimport { SharedStyles } from \\'@src/styles/SharedStyles\\';\n\n<View\n  style={[\n    SharedStyles.rowBetween,\n    direction === \"rtl\" && SharedStyles.rowReverse,\n  ]}\n>\n\\`\\`\\`\n\n**Benefits:**\n‚úÖ No inline styles\n‚úÖ Reusable\n‚úÖ Consistent\n‚úÖ Performant\n\n---\n\n## Migration Checklist\n\n### Phase 1: Setup (Day 1)\n- [ ] Create SharedStyles.ts\n- [ ] Create Container component\n- [ ] Create Row component\n- [ ] Create Column component\n- [ ] Create useAppTheme hook\n- [ ] Create styling guide\n\n### Phase 2: Core Components (Days 2-3)\n- [ ] Refactor Button\n- [ ] Refactor Card\n- [ ] Refactor TextField\n- [ ] Refactor all UIKit components\n\n### Phase 3: Screens (Days 4-10)\n- [ ] Update medication screens\n- [ ] Update booking screens\n- [ ] Update cycle screens\n- [ ] Update all other screens\n\n### Phase 4: Cleanup (Day 11)\n- [ ] Remove all inline styles\n- [ ] Remove style props from components\n- [ ] Verify consistency\n- [ ] Performance testing\n\n---\n\n## Verification\n\n### Search for Anti-Patterns:\n\n\\`\\`\\`bash\n# Find inline styles\ngrep -r \"style={{\" app/\n\n# Find hardcoded colors\ngrep -r \"backgroundColor: [\\'\\\"]#\" app/\ngrep -r \"color: [\\'\\\"]#\" app/\n\n# Find magic numbers in styles\ngrep -r \"padding: [0-9]\" app/\ngrep -r \"margin: [0-9]\" app/\n\\`\\`\\`\n\n---\n\n## Benefits\n\n‚úÖ **Performance:** No inline styles  \n‚úÖ **Consistency:** Shared styles everywhere  \n‚úÖ **Maintainability:** Easy to update globally  \n‚úÖ **Developer Experience:** Clear patterns  \n‚úÖ **Type Safety:** Proper TypeScript support  \n‚úÖ **Scalability:** Easy to add new components  \n\n---\n\n\n## Priority: üî¥ CRITICAL - BLOCKS MAINTAINABILITY\n`;","map":{"version":3,"names":["stylingContent"],"sources":["/Users/oudaykhaled/Downloads/Open Source/Code Review/dashboard/src/data/content/styling.js"],"sourcesContent":["export const stylingContent = `\n# üî¥ CRITICAL ISSUE #5: Chaotic Styling Approach\n\n**Severity:** üî¥ CRITICAL  \n**Score:** 3/10  \n**Status:** ‚ùå MUST FIX IMMEDIATELY\n\n---\n\n## Overview\n\nThe codebase has **NO consistent styling approach**. It mixes multiple styling patterns chaotically:\n- Inline styles\n- StyleSheet.create()\n- Theme colors (sometimes)\n- Hardcoded colors\n- Component props for styling\n- Mixed approaches in same file\n\nThis makes the code:\n- ‚ùå Unmaintainable\n- ‚ùå Inconsistent\n- ‚ùå Poor performance (inline styles)\n- ‚ùå Difficult to theme\n- ‚ùå Hard to refactor\n\n---\n\n## Issues Found\n\n### 1. **Inline Styles Everywhere**\n\n#### Location: \\`app/(auth)/medication/addMedicine.tsx\\`\n\n\\`\\`\\`typescript\n<View\n  style={{\n    flexDirection: direction === \"ltr\" ? \"row\" : \"row-reverse\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n  }}\n>\n\\`\\`\\`\n\n**Issues:**\n- ‚ùå Style object recreated on every render\n- ‚ùå Poor performance\n- ‚ùå Cannot reuse\n- ‚ùå Hard to maintain\n- ‚ùå No consistency\n\n---\n\n#### Location: \\`app/(auth)/booking/unknownPay.tsx\\`\n\n\\`\\`\\`typescript\n<Card\n  padding={12}\n  margin={12}\n  backgroundColor={colors.card}\n  style={styles.container}\n>\n\\`\\`\\`\n\n**Issues:**\n- ‚ùå Mix of props and style object\n- ‚ùå Inconsistent API\n- ‚ùå Magic numbers as props\n- ‚ùå Confusing component interface\n\n---\n\n### 2. **Inconsistent StyleSheet Usage**\n\n#### Location: \\`src/components/UIKit/Button.tsx\\`\n\n\\`\\`\\`typescript\nconst styles = StyleSheet.create({\n  contain: {\n    paddingVertical: 8,      // ‚ùå Magic number\n    paddingHorizontal: 14,   // ‚ùå Magic number\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    gap: 4,                  // ‚ùå Magic number\n  },\n  outline: {\n    paddingVertical: 8,      // ‚ùå Duplicated values\n    paddingHorizontal: 14,   // ‚ùå Duplicated values\n    alignItems: \"center\",    // ‚ùå Duplicated\n    justifyContent: \"center\",// ‚ùå Duplicated\n    gap: 4,                  // ‚ùå Duplicated\n  },\n  text: {\n    paddingVertical: 8,      // ‚ùå Duplicated again\n    paddingHorizontal: 14,   // ‚ùå Duplicated again\n    alignItems: \"center\",    // ‚ùå Duplicated again\n    justifyContent: \"center\",// ‚ùå Duplicated again\n    gap: 4,                  // ‚ùå Duplicated again\n  },\n});\n\\`\\`\\`\n\n**Issues:**\n- ‚ùå Massive code duplication\n- ‚ùå Magic numbers\n- ‚ùå No shared base styles\n- ‚ùå Hard to maintain consistency\n\n---\n\n### 3. **Hardcoded Colors**\n\n#### Location: Multiple files\n\n\\`\\`\\`typescript\n// Sometimes using theme colors\nbackgroundColor: colors.card\n\n// Sometimes hardcoded\nbackgroundColor: \"#7C3A3D\"\n\n// Sometimes using Colors constant\nbackgroundColor: Colors.main\n\n// Sometimes inline\nstyle={{ backgroundColor: \\'#fff\\' }}\n\\`\\`\\`\n\n**Issues:**\n- ‚ùå No consistency\n- ‚ùå Cannot theme properly\n- ‚ùå Hardcoded values\n- ‚ùå Multiple sources of truth\n\n---\n\n### 4. **Mixed Styling Patterns in Same File**\n\n#### Location: \\`app/(auth)/BookingsDetail/index.tsx\\`\n\n\\`\\`\\`typescript\n// Pattern 1: StyleSheet\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 16,\n  },\n});\n\n// Pattern 2: Inline styles\n<View style={{ marginTop: 12, paddingHorizontal: 16 }}>\n\n// Pattern 3: Component props\n<Card padding={12} margin={8}>\n\n// Pattern 4: Mixed\n<View style={[styles.container, { marginTop: 24 }]}>\n\n// Pattern 5: Conditional inline\n<View style={{\n  flexDirection: isRTL ? \\'row-reverse\\' : \\'row\\',\n  padding: 16,\n}}>\n\\`\\`\\`\n\n**Issues:**\n- ‚ùå Five different patterns in one file\n- ‚ùå No consistency\n- ‚ùå Confusing for developers\n- ‚ùå Hard to maintain\n\n---\n\n### 5. **No Base/Shared Styles**\n\nNo shared utility styles for common patterns:\n\n\\`\\`\\`typescript\n// This pattern repeated 50+ times:\n{\n  flexDirection: \\'row\\',\n  alignItems: \\'center\\',\n  justifyContent: \\'space-between\\',\n}\n\n// This pattern repeated 30+ times:\n{\n  flex: 1,\n  padding: 16,\n}\n\n// This pattern repeated 20+ times:\n{\n  marginTop: 16,\n  marginBottom: 16,\n}\n\\`\\`\\`\n\n**Issues:**\n- ‚ùå Massive code duplication\n- ‚ùå No DRY principle\n- ‚ùå Inconsistent spacing\n- ‚ùå Hard to change globally\n\n---\n\n## Impact Assessment\n\n| Category | Impact | Description |\n|----------|--------|-------------|\n| Performance | üü† High | Inline styles hurt performance |\n| Maintainability | üî¥ Critical | Impossible to maintain consistency |\n| Developer Experience | üî¥ Critical | Confusing, no clear patterns |\n| Consistency | üî¥ Critical | UI looks inconsistent |\n| Scalability | üî¥ Critical | Cannot scale with current approach |\n| Theming | üü† High | Difficult to theme properly |\n\n---\n\n## Required Implementation\n\n### 1. **Establish Styling Standards**\n\n#### Create: \\`docs/STYLING_GUIDE.md\\`\n\n\\`\\`\\`markdown\n# Styling Guide\n\n## Rules\n\n1. **ALWAYS use StyleSheet.create()** - Never inline styles except for dynamic values\n2. **Use theme colors** - Never hardcode colors\n3. **Use design tokens** - Never use magic numbers\n4. **Use shared styles** - Don\\'t duplicate common patterns\n5. **Keep styles close to component** - Define at bottom of file\n\n## Examples\n\n### ‚úÖ GOOD\n\\`\\`\\`typescript\nimport { Spacing, BorderRadius } from \\'@src/constants\\';\nimport { useTheme } from \\'react-native-paper\\';\n\nconst MyComponent = () => {\n  const { colors } = useTheme();\n  \n  return (\n    <View style={[styles.container, { backgroundColor: colors.surface }]}>\n      <Text>Content</Text>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: Spacing.lg,\n    borderRadius: BorderRadius.md,\n  },\n});\n\\`\\`\\`\n\n### ‚ùå BAD\n\\`\\`\\`typescript\n<View style={{\n  padding: 16,\n  borderRadius: 12,\n  backgroundColor: \\'#fff\\',\n}}>\n  <Text>Content</Text>\n</View>\n\\`\\`\\`\n\\`\\`\\`\n\n---\n\n### 2. **Create Shared Styles**\n\n#### Create: \\`src/styles/SharedStyles.ts\\`\n\n\\`\\`\\`typescript\nimport { StyleSheet } from \\'react-native\\';\nimport { Spacing } from \\'@src/constants\\';\n\n/**\n * Shared utility styles used throughout the app\n * Import and use these instead of duplicating styles\n */\nexport const SharedStyles = StyleSheet.create({\n  // Flex layouts\n  flex1: {\n    flex: 1,\n  },\n  \n  // Common flex patterns\n  row: {\n    flexDirection: \\'row\\',\n  },\n  \n  rowReverse: {\n    flexDirection: \\'row-reverse\\',\n  },\n  \n  column: {\n    flexDirection: \\'column\\',\n  },\n  \n  // Alignment\n  center: {\n    alignItems: \\'center\\',\n    justifyContent: \\'center\\',\n  },\n  \n  alignCenter: {\n    alignItems: \\'center\\',\n  },\n  \n  justifyCenter: {\n    justifyContent: \\'center\\',\n  },\n  \n  spaceBetween: {\n    justifyContent: \\'space-between\\',\n  },\n  \n  spaceAround: {\n    justifyContent: \\'space-around\\',\n  },\n  \n  // Common combinations\n  rowCenter: {\n    flexDirection: \\'row\\',\n    alignItems: \\'center\\',\n  },\n  \n  rowBetween: {\n    flexDirection: \\'row\\',\n    alignItems: \\'center\\',\n    justifyContent: \\'space-between\\',\n  },\n  \n  // Padding\n  paddingXS: {\n    padding: Spacing.xs,\n  },\n  \n  paddingSM: {\n    padding: Spacing.sm,\n  },\n  \n  paddingMD: {\n    padding: Spacing.md,\n  },\n  \n  paddingLG: {\n    padding: Spacing.lg,\n  },\n  \n  paddingXL: {\n    padding: Spacing.xl,\n  },\n  \n  // Horizontal padding\n  paddingHorizontalSM: {\n    paddingHorizontal: Spacing.sm,\n  },\n  \n  paddingHorizontalMD: {\n    paddingHorizontal: Spacing.md,\n  },\n  \n  paddingHorizontalLG: {\n    paddingHorizontal: Spacing.lg,\n  },\n  \n  // Vertical padding\n  paddingVerticalSM: {\n    paddingVertical: Spacing.sm,\n  },\n  \n  paddingVerticalMD: {\n    paddingVertical: Spacing.md,\n  },\n  \n  paddingVerticalLG: {\n    paddingVertical: Spacing.lg,\n  },\n  \n  // Margin\n  marginXS: {\n    margin: Spacing.xs,\n  },\n  \n  marginSM: {\n    margin: Spacing.sm,\n  },\n  \n  marginMD: {\n    margin: Spacing.md,\n  },\n  \n  marginLG: {\n    margin: Spacing.lg,\n  },\n  \n  marginXL: {\n    margin: Spacing.xl,\n  },\n  \n  // Gaps (for flexbox)\n  gapXS: {\n    gap: Spacing.xs,\n  },\n  \n  gapSM: {\n    gap: Spacing.sm,\n  },\n  \n  gapMD: {\n    gap: Spacing.md,\n  },\n  \n  gapLG: {\n    gap: Spacing.lg,\n  },\n  \n  // Full width/height\n  fullWidth: {\n    width: \\'100%\\',\n  },\n  \n  fullHeight: {\n    height: \\'100%\\',\n  },\n  \n  // Absolute positioning\n  absolute: {\n    position: \\'absolute\\',\n  },\n  \n  absoluteFill: {\n    position: \\'absolute\\',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n  },\n});\n\\`\\`\\`\n\n---\n\n### 3. **Update Components to Use Shared Styles**\n\n#### Update: \\`app/(auth)/medication/addMedicine.tsx\\`\n\n**Before:**\n\\`\\`\\`typescript\n<View\n  style={{\n    flexDirection: direction === \"ltr\" ? \"row\" : \"row-reverse\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n  }}\n>\n\\`\\`\\`\n\n**After:**\n\\`\\`\\`typescript\nimport { SharedStyles } from \\'@src/styles/SharedStyles\\';\n\n<View\n  style={[\n    SharedStyles.rowBetween,\n    direction === \"rtl\" && SharedStyles.rowReverse,\n  ]}\n>\n\\`\\`\\`\n\n**Benefits:**\n‚úÖ No inline styles\n‚úÖ Reusable\n‚úÖ Consistent\n‚úÖ Performant\n\n---\n\n## Migration Checklist\n\n### Phase 1: Setup (Day 1)\n- [ ] Create SharedStyles.ts\n- [ ] Create Container component\n- [ ] Create Row component\n- [ ] Create Column component\n- [ ] Create useAppTheme hook\n- [ ] Create styling guide\n\n### Phase 2: Core Components (Days 2-3)\n- [ ] Refactor Button\n- [ ] Refactor Card\n- [ ] Refactor TextField\n- [ ] Refactor all UIKit components\n\n### Phase 3: Screens (Days 4-10)\n- [ ] Update medication screens\n- [ ] Update booking screens\n- [ ] Update cycle screens\n- [ ] Update all other screens\n\n### Phase 4: Cleanup (Day 11)\n- [ ] Remove all inline styles\n- [ ] Remove style props from components\n- [ ] Verify consistency\n- [ ] Performance testing\n\n---\n\n## Verification\n\n### Search for Anti-Patterns:\n\n\\`\\`\\`bash\n# Find inline styles\ngrep -r \"style={{\" app/\n\n# Find hardcoded colors\ngrep -r \"backgroundColor: [\\'\\\"]#\" app/\ngrep -r \"color: [\\'\\\"]#\" app/\n\n# Find magic numbers in styles\ngrep -r \"padding: [0-9]\" app/\ngrep -r \"margin: [0-9]\" app/\n\\`\\`\\`\n\n---\n\n## Benefits\n\n‚úÖ **Performance:** No inline styles  \n‚úÖ **Consistency:** Shared styles everywhere  \n‚úÖ **Maintainability:** Easy to update globally  \n‚úÖ **Developer Experience:** Clear patterns  \n‚úÖ **Type Safety:** Proper TypeScript support  \n‚úÖ **Scalability:** Easy to add new components  \n\n---\n\n\n## Priority: üî¥ CRITICAL - BLOCKS MAINTAINABILITY\n`;\n"],"mappings":"AAAA,OAAO,MAAMA,cAAcignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}