{"ast":null,"code":"export const securityContent=\"\\n# \\uD83D\\uDD34 CRITICAL ISSUE #1: Security Vulnerabilities\\n\\n**Severity:** \\uD83D\\uDD34 CRITICAL  \\n**Score:** 1/10  \\n**Status:** \\u274C MUST FIX IMMEDIATELY\\n\\n---\\n\\n## Overview\\n\\nAPI keys, credentials, and sensitive configuration are **hardcoded and exposed** in the repository. This is a **critical security vulnerability** that can lead to:\\n- Unauthorized access to backend services\\n- Data breaches\\n- Financial liability\\n- Service abuse\\n- Compliance violations (HIPAA for healthcare apps)\\n\\n---\\n\\n## Issues Found\\n\\n### 1. **Exposed Google API Keys**\\n\\n#### Location: `GoogleService-Info.plist`\\n```xml\\n<key>API_KEY</key>\\n<string>AIzaSyCj2bSK2U0pccNAv5Q0QZy0CYEdUGE2FfM</string>\\n\\n<key>CLIENT_ID</key>\\n<string>113904800649-rm71thlh5407ju7in0s0gv105h8ehvpq.apps.googleusercontent.com</string>\\n```\\n\\n**Risk Level:** \\uD83D\\uDD34 CRITICAL  \\n**Impact:** Anyone with repository access can use these keys to access Google services\\n\\n---\\n\\n### 2. **Hardcoded API Base URLs**\\n\\n#### Location: `src/config.ts`\\n```typescript\\nexport const config = {\\n  // baseURL: \\\"http://localhost:15350\\\",\\n  // baseURL: \\\"http://10.20.30.21:15350\\\",\\n  // baseURL: \\\"http://192.168.10.30:15350\\\",\\n  baseURL: \\\"https://neocareapi.myvannet.eu\\\",\\n};\\n```\\n\\n**Risk Level:** \\uD83D\\uDFE0 HIGH  \\n**Issues:**\\n- Multiple commented URLs expose internal network structure\\n- Production URL hardcoded\\n- No environment-based configuration\\n\\n---\\n\\n## Impact Assessment\\n\\n| Risk Category | Impact | Likelihood | Overall Risk |\\n|--------------|--------|------------|--------------|\\n| Data Breach | Critical | High | \\uD83D\\uDD34 Critical |\\n| Service Abuse | High | High | \\uD83D\\uDD34 Critical |\\n| Financial Loss | High | Medium | \\uD83D\\uDFE0 High |\\n| Reputation Damage | Critical | High | \\uD83D\\uDD34 Critical |\\n| Compliance Violation | Critical | High | \\uD83D\\uDD34 Critical |\\n\\n---\\n\\n## Required Actions\\n\\n### \\u26A0\\uFE0F IMMEDIATE (Within 24 Hours)\\n\\n1. **Rotate ALL exposed API keys**\\n   - Generate new Google API keys\\n   - Update Firebase configuration\\n   - Revoke old keys immediately\\n\\n2. **Remove sensitive files from git history**\\n   ```bash\\n   # Use BFG Repo-Cleaner\\n   brew install bfg\\n   bfg --delete-files GoogleService-Info.plist\\n   bfg --delete-files google-services.json\\n   ```\\n\\n3. **Add files to .gitignore**\\n   ```gitignore\\n   # Sensitive configuration\\n   GoogleService-Info.plist\\n   google-services.json\\n   .env\\n   .env.local\\n   .env.production\\n   ```\\n\\n---\\n\\n### \\uD83D\\uDD27 SHORT TERM (Week 1)\\n\\n#### 1. Implement Environment Variables\\n\\n**Create:** `app.config.js`\\n```javascript\\nexport default {\\n  name: \\\"NEOCARE\\\",\\n  version: \\\"1.2.0\\\",\\n  extra: {\\n    apiUrl: process.env.API_URL,\\n    googleApiKey: process.env.GOOGLE_API_KEY,\\n    googleClientId: process.env.GOOGLE_CLIENT_ID,\\n    supportPhone: process.env.SUPPORT_PHONE,\\n  }\\n};\\n```\\n\\n**Update:** `src/config.ts`\\n```typescript\\nimport Constants from 'expo-constants';\\n\\nexport const config = {\\n  baseURL: Constants.expoConfig?.extra?.apiUrl || '',\\n  googleApiKey: Constants.expoConfig?.extra?.googleApiKey || '',\\n  googleClientId: Constants.expoConfig?.extra?.googleClientId || '',\\n  supportPhone: Constants.expoConfig?.extra?.supportPhone || '',\\n};\\n\\n// Validation\\nif (!config.baseURL) {\\n  throw new Error('API_URL environment variable is required');\\n}\\n```\\n\\n---\\n\\n## Verification Checklist\\n\\n- [ ] All API keys rotated\\n- [ ] Sensitive files removed from git history\\n- [ ] `.gitignore` updated\\n- [ ] Environment variables implemented\\n- [ ] `.env.example` created and documented\\n- [ ] EAS secrets configured\\n- [ ] All hardcoded URLs replaced with env vars\\n- [ ] All hardcoded credentials replaced with env vars\\n- [ ] Team members notified of new configuration\\n- [ ] Documentation updated\\n- [ ] Security audit performed\\n\\n---\\n\\n## Prevention Measures\\n\\n### 1. **Pre-commit Hooks**\\n\\nInstall `git-secrets`:\\n```bash\\nbrew install git-secrets\\ngit secrets --install\\ngit secrets --register-aws\\n```\\n\\n### 2. **Code Review Checklist**\\n- [ ] No API keys in code\\n- [ ] No passwords in code\\n- [ ] No internal URLs in code\\n- [ ] All config uses environment variables\\n\\n---\\n\\n\\n## Priority: \\uD83D\\uDD34 HIGHEST - DO NOT DEPLOY UNTIL FIXED\\n\";","map":{"version":3,"names":["securityContent"],"sources":["/Users/oudaykhaled/Downloads/Open Source/Code Review/dashboard/src/data/content/security.js"],"sourcesContent":["export const securityContent = `\n# üî¥ CRITICAL ISSUE #1: Security Vulnerabilities\n\n**Severity:** üî¥ CRITICAL  \n**Score:** 1/10  \n**Status:** ‚ùå MUST FIX IMMEDIATELY\n\n---\n\n## Overview\n\nAPI keys, credentials, and sensitive configuration are **hardcoded and exposed** in the repository. This is a **critical security vulnerability** that can lead to:\n- Unauthorized access to backend services\n- Data breaches\n- Financial liability\n- Service abuse\n- Compliance violations (HIPAA for healthcare apps)\n\n---\n\n## Issues Found\n\n### 1. **Exposed Google API Keys**\n\n#### Location: \\`GoogleService-Info.plist\\`\n\\`\\`\\`xml\n<key>API_KEY</key>\n<string>AIzaSyCj2bSK2U0pccNAv5Q0QZy0CYEdUGE2FfM</string>\n\n<key>CLIENT_ID</key>\n<string>113904800649-rm71thlh5407ju7in0s0gv105h8ehvpq.apps.googleusercontent.com</string>\n\\`\\`\\`\n\n**Risk Level:** üî¥ CRITICAL  \n**Impact:** Anyone with repository access can use these keys to access Google services\n\n---\n\n### 2. **Hardcoded API Base URLs**\n\n#### Location: \\`src/config.ts\\`\n\\`\\`\\`typescript\nexport const config = {\n  // baseURL: \"http://localhost:15350\",\n  // baseURL: \"http://10.20.30.21:15350\",\n  // baseURL: \"http://192.168.10.30:15350\",\n  baseURL: \"https://neocareapi.myvannet.eu\",\n};\n\\`\\`\\`\n\n**Risk Level:** üü† HIGH  \n**Issues:**\n- Multiple commented URLs expose internal network structure\n- Production URL hardcoded\n- No environment-based configuration\n\n---\n\n## Impact Assessment\n\n| Risk Category | Impact | Likelihood | Overall Risk |\n|--------------|--------|------------|--------------|\n| Data Breach | Critical | High | üî¥ Critical |\n| Service Abuse | High | High | üî¥ Critical |\n| Financial Loss | High | Medium | üü† High |\n| Reputation Damage | Critical | High | üî¥ Critical |\n| Compliance Violation | Critical | High | üî¥ Critical |\n\n---\n\n## Required Actions\n\n### ‚ö†Ô∏è IMMEDIATE (Within 24 Hours)\n\n1. **Rotate ALL exposed API keys**\n   - Generate new Google API keys\n   - Update Firebase configuration\n   - Revoke old keys immediately\n\n2. **Remove sensitive files from git history**\n   \\`\\`\\`bash\n   # Use BFG Repo-Cleaner\n   brew install bfg\n   bfg --delete-files GoogleService-Info.plist\n   bfg --delete-files google-services.json\n   \\`\\`\\`\n\n3. **Add files to .gitignore**\n   \\`\\`\\`gitignore\n   # Sensitive configuration\n   GoogleService-Info.plist\n   google-services.json\n   .env\n   .env.local\n   .env.production\n   \\`\\`\\`\n\n---\n\n### üîß SHORT TERM (Week 1)\n\n#### 1. Implement Environment Variables\n\n**Create:** \\`app.config.js\\`\n\\`\\`\\`javascript\nexport default {\n  name: \"NEOCARE\",\n  version: \"1.2.0\",\n  extra: {\n    apiUrl: process.env.API_URL,\n    googleApiKey: process.env.GOOGLE_API_KEY,\n    googleClientId: process.env.GOOGLE_CLIENT_ID,\n    supportPhone: process.env.SUPPORT_PHONE,\n  }\n};\n\\`\\`\\`\n\n**Update:** \\`src/config.ts\\`\n\\`\\`\\`typescript\nimport Constants from \\'expo-constants\\';\n\nexport const config = {\n  baseURL: Constants.expoConfig?.extra?.apiUrl || \\'\\',\n  googleApiKey: Constants.expoConfig?.extra?.googleApiKey || \\'\\',\n  googleClientId: Constants.expoConfig?.extra?.googleClientId || \\'\\',\n  supportPhone: Constants.expoConfig?.extra?.supportPhone || \\'\\',\n};\n\n// Validation\nif (!config.baseURL) {\n  throw new Error(\\'API_URL environment variable is required\\');\n}\n\\`\\`\\`\n\n---\n\n## Verification Checklist\n\n- [ ] All API keys rotated\n- [ ] Sensitive files removed from git history\n- [ ] \\`.gitignore\\` updated\n- [ ] Environment variables implemented\n- [ ] \\`.env.example\\` created and documented\n- [ ] EAS secrets configured\n- [ ] All hardcoded URLs replaced with env vars\n- [ ] All hardcoded credentials replaced with env vars\n- [ ] Team members notified of new configuration\n- [ ] Documentation updated\n- [ ] Security audit performed\n\n---\n\n## Prevention Measures\n\n### 1. **Pre-commit Hooks**\n\nInstall \\`git-secrets\\`:\n\\`\\`\\`bash\nbrew install git-secrets\ngit secrets --install\ngit secrets --register-aws\n\\`\\`\\`\n\n### 2. **Code Review Checklist**\n- [ ] No API keys in code\n- [ ] No passwords in code\n- [ ] No internal URLs in code\n- [ ] All config uses environment variables\n\n---\n\n\n## Priority: üî¥ HIGHEST - DO NOT DEPLOY UNTIL FIXED\n`;\n"],"mappings":"AAAA,MAAO,MAAM,CAAAA,eAAe,2sIA6K3B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}